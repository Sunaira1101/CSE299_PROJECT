{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE299_PROJECT\\\\client\\\\src\\\\components\\\\update\\\\Update.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { makeRequest } from \"../../axios\";\nimport \"./update.css\";\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = _ref => {\n  _s();\n  let {\n    setOpenUpdate,\n    user\n  } = _ref;\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [texts, setTexts] = useState({\n    // email: user.email,\n    // password: user.password,\n    // name: user.name,\n    // city: user.city,\n    // website: user.website,\n    name: \"\",\n    city: \"\"\n  });\n  const upload = async file => {\n    console.log(file);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleChange = e => {\n    setTexts(prev => ({\n      ...prev,\n      [e.target.name]: [e.target.value]\n    }));\n  };\n  const queryClient = useQueryClient();\n  const mutation = useMutation(user => {\n    return makeRequest.put(\"/users\", user);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"user\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    let coverUrl;\n    let profileUrl;\n    coverUrl = cover ? await upload(cover) : user.coverPic;\n    profileUrl = profile ? await upload(profile) : user.profilePic;\n    mutation.mutate({\n      ...texts,\n      coverPic: coverUrl,\n      profilePic: profileUrl\n    });\n    setOpenUpdate(false);\n    setCover(null);\n    setProfile(null);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update\",\n      children: [\"Update\", /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpenUpdate(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(Update, \"9VSoXCqBBipQivHduQueOPMqy1o=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useState","makeRequest","useMutation","useQueryClient","React","jsxDEV","_jsxDEV","Update","_ref","_s","setOpenUpdate","user","cover","setCover","profile","setProfile","texts","setTexts","name","city","upload","file","console","log","formData","FormData","append","res","post","data","err","handleChange","e","prev","target","value","queryClient","mutation","put","onSuccess","invalidateQueries","handleClick","preventDefault","coverUrl","profileUrl","coverPic","profilePic","mutate","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/CSE299_PROJECT/client/src/components/update/Update.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { makeRequest } from \"../../axios\";\r\nimport \"./update.css\";\r\nimport  { useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\n\r\nimport React from 'react'\r\n\r\nconst Update = ({setOpenUpdate,user}) => {\r\n\r\n    const [cover, setCover] = useState(null);\r\n    const [profile, setProfile] = useState(null);\r\n    const [texts, setTexts] = useState({\r\n        // email: user.email,\r\n        // password: user.password,\r\n        // name: user.name,\r\n        // city: user.city,\r\n        // website: user.website,\r\n        name: \"\",\r\n        city: \"\"\r\n      });\r\n\r\n      const upload = async (file) => {\r\n        console.log(file)\r\n        try {\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          const res = await makeRequest.post(\"/upload\", formData);\r\n          return res.data;\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n\r\n      const handleChange = (e) => {\r\n        setTexts((prev) => ({ ...prev, [e.target.name]: [e.target.value] }));\r\n      };\r\n\r\n      const queryClient = useQueryClient();\r\n\r\n      const mutation = useMutation(\r\n        (user) => {\r\n        return makeRequest.put(\"/users\", user);\r\n        },\r\n        {\r\n        onSuccess: () => {\r\n            // Invalidate and refetch\r\n            queryClient.invalidateQueries([\"user\"]);\r\n        },\r\n        }\r\n      );\r\n\r\n      const handleClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let coverUrl;\r\n        let profileUrl;\r\n        coverUrl = cover ? await upload(cover) : user.coverPic;\r\n        profileUrl = profile ? await upload(profile) : user.profilePic;\r\n        \r\n        mutation.mutate({ ...texts, coverPic: coverUrl, profilePic: profileUrl });\r\n        setOpenUpdate(false);\r\n        setCover(null);\r\n        setProfile(null);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"update\">\r\n      Update\r\n\r\n      <form>\r\n        <input type=\"file\" />\r\n        <input type=\"file\" />\r\n        <input type=\"text\" name=\"name\" onChange={handleChange}/>\r\n        <input type=\"text\" name=\"city\" onChange={handleChange} />\r\n        <button onClick={handleClick}>Update</button>\r\n      </form>\r\n\r\n\r\n\r\n\r\n      <button onClick={()=>setOpenUpdate(false)}>X</button>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default Update;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}