{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE299_PROJECT\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport \"./comments.css\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = _ref => {\n  _s();\n  let {\n    postid\n  } = _ref;\n  const [desc, setDesc] = useState(\"\");\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery({\n    queryKey: ['comments'],\n    queryFn: () => makeRequest.get(\"/comments?postid=\" + postid).then(res => {\n      return res.data;\n    })\n  });\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post(\"/comment\", newComment);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postid\n    });\n    setDesc(\"\");\n  };\n\n  //   const comments = [ \n  //     {\n  //         id: 1,\n  //         desc: \"Good picture! Like it!\",\n  //         name: \"Farasha Yussouf\",\n  //         userId: 1,\n  //         profilePicture: \"/assets/comment1.jpeg\"\n  //     },\n  //     {\n  //         id: 2,\n  //         desc: \"Lovely!\",\n  //         name: \"Farasha Yussouf\",\n  //         userId: 2,\n  //         profilePicture: \"/assets/comment1.jpeg\"\n  //     },\n  //   ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"writeImg\",\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"writeInput\",\n        type: \"text\",\n        placeholder: \"Write a comment\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"writeButton\",\n        onClick: handleClick,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"commentImg\",\n        src: comment.profilePicture,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"commentName\",\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commentDesc\",\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"commentDate\",\n        children: moment(comment.createdate).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"Fsi/C5X0aJaIFg1YxzJ6bbBdWOc=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","jsxDEV","_jsxDEV","Comments","_ref","_s","postid","desc","setDesc","currentUser","isLoading","error","data","queryKey","queryFn","get","then","res","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","src","profilePic","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","map","comment","profilePicture","name","createdate","fromNow","_c","$RefreshReg$"],"sources":["D:/CSE299_PROJECT/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport \"./comments.css\";\r\nimport {AuthContext} from \"../../context/authContext\";\r\nimport { useQuery,  useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { makeRequest } from \"../../axios\";\r\nimport moment from \"moment\";\r\n\r\nconst Comments = ({postid}) => {\r\n    const [desc, setDesc] = useState(\"\")\r\n    \r\n    const { currentUser } = useContext(AuthContext)\r\n\r\n    const { isLoading, error, data } = useQuery({\r\n        queryKey: ['comments'],\r\n        queryFn: () =>\r\n         makeRequest.get(\"/comments?postid=\"+postid).then((res) => {\r\n            return res.data;\r\n         })\r\n      });\r\n\r\n\r\n\r\n    const queryClient = useQueryClient()\r\n\r\n    const mutation = useMutation(\r\n        (newComment) => {\r\n          return makeRequest.post(\"/comment\", newComment);\r\n        },\r\n        {\r\n          onSuccess: () => {\r\n            // Invalidate and refetch\r\n            queryClient.invalidateQueries([\"comments\"]);\r\n          },\r\n        }\r\n      );\r\n\r\n   \r\n\r\n    const handleClick = async (e) =>{\r\n        e.preventDefault();\r\n        mutation.mutate({ desc, postid });\r\n        setDesc(\"\");\r\n        \r\n\r\n        \r\n    };\r\n  \r\n  \r\n//   const comments = [ \r\n//     {\r\n//         id: 1,\r\n//         desc: \"Good picture! Like it!\",\r\n//         name: \"Farasha Yussouf\",\r\n//         userId: 1,\r\n//         profilePicture: \"/assets/comment1.jpeg\"\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         desc: \"Lovely!\",\r\n//         name: \"Farasha Yussouf\",\r\n//         userId: 2,\r\n//         profilePicture: \"/assets/comment1.jpeg\"\r\n//     },\r\n//   ];\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n        <div className=\"write\">\r\n            <img className=\"writeImg\" src={currentUser.profilePic} alt=\"\" />\r\n            <input className=\"writeInput\" type=\"text\" placeholder=\"Write a comment\" \r\n            value={desc}\r\n            onChange={(e) => setDesc(e.target.value)}/>\r\n            <button className=\"writeButton\" onClick={handleClick}>Post</button>\r\n        </div>\r\n        \r\n        \r\n        {isLoading ? \"loading\" : data.map(comment=>(\r\n            <div className=\"comment\">\r\n                <img className=\"commentImg\" src={comment.profilePicture} alt=\"\" />\r\n                <div className=\"commentInfo\">\r\n                    <span className=\"commentName\">{comment.name}</span>\r\n                    <p className=\"commentDesc\">{comment.desc}</p>\r\n                </div>\r\n                <span className=\"commentDate\">{moment(comment.createdate).fromNow()}</span>\r\n            </div>\r\n        ))\r\n    }  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}